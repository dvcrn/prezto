#
# Executes commands at the start of an interactive session.
#
# Authors:
#   David Mohl <me@dave.cx>
#


export LANG="en_US.UTF-8"
export LC_COLLATE="en_US.UTF-8"
export LC_CTYPE="en_US.UTF-8"
export LC_MESSAGES="en_US.UTF-8"
export LC_MONETARY="en_US.UTF-8"
export LC_NUMERIC="en_US.UTF-8"
export LC_TIME="en_US.UTF-8"
export LC_ALL=

export PATH="$(brew --prefix)/bin:$PATH"
export DEVELOPER_DIR="/Applications/Xcode.app/Contents/Developer/"

export VISUAL=vim
export EDITOR=vim
export PURE_PROMPT_SYMBOL="Î»"

alias serve='python -m SimpleHTTPServer 8000'

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi
source $(brew --prefix)/etc/profile.d/z.sh

activate() {
  [ -d venv ] && source venv/bin/activate
  [ -d ../venv ] && source ../venv/bin/activate
}

alias act='activate'

s () {
  grep "$1" . -r
}

f () {
  find . -name "$1"
}

ggc () {
  git branch --remote | grep $1 | sed 's/origin\///g' | xargs git checkout
}

gsb () {
  git branch --all | grep $1 | sed 's/remotes\/origin\///g' | sed 's/\*/ /g'  | sort -u | uniq
}

gff() {
  branch=$(git branch | grep '*' | awk '{print $2}')
  git fetch --all
  git checkout develop
  git rebase upstream/develop
  git checkout $branch
}

alias workon=ggc

# Deploy stuff
dep () {
  executionpath=$(pwd)
  [ -d venv ] && source venv/bin/activate
  [ -d ../venv ] && source ../venv/bin/activate
  fabfiledir=$(find . -name 'fabfile.py' | sed s/fabfile.py//g | sed s,\\./,,g)
  cd $fabfiledir

  if [ $# -ne 0 ]
  then
    hostname=staging:$1
  else
    hostname=staging
  fi

  if [ $# -eq 2 ]
  then
    fab $hostname force update && fab $hostname migrate && fab $hostname cutover
  else
    fab $hostname force update && fab $hostname cutover
  fi

  cd $executionpath
}

emacs () {
  PROCESS=Emacs
  number=$(ps aux | grep $PROCESS | wc -l)

  if [ $number -gt 1  ]
  then
    # emacsclient -c -n $1
    emacsclient -n $1
  else
    open -a /usr/local/Cellar/emacs-mac/emacs-24.5-z-mac-5.10/Emacs.app $1
  fi

}

# local / temporary overrides that don't need to go into this repository
[ -f ~/.localrc ] && source ~/.localrc

bindkey '^E' end-of-line
bindkey '^A' beginning-of-line
bindkey '^R' history-incremental-pattern-search-backward
bindkey '^[[A' history-substring-search-down
bindkey '^[[B' history-substring-search-up

bindkey '^[b' backward-word
bindkey '^[f' forward-word

alias vim="reattach-to-user-namespace vim"
alias vi="vim"

test -e ${HOME}/.iterm2_shell_integration.zsh && source ${HOME}/.iterm2_shell_integration.zsh
